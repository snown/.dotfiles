#!/usr/bin/env bash 

while [[ $# -gt 0 ]]; do
	case $1 in
	    -a|--all)
	    SHOW_ALL=true
	    shift # past flag
	    ;;
	    *)
	            # unknown option
	    ;;
	esac
	shift # past argument or value
done

function printANSI() {
	# This file echoes a bunch of color codes to the terminal to demonstrate
	# what's available. Each line is the color code of one forground color,
	# out of 17 (default + 16 escapes), followed by a test use of that color
	# on all nine background colors (default + 8 escapes).
	#

	echo -e "\n ANSI Color Usage:"
	echo "  Syntax --> \`\e[\${FORMAT};\${BG_COLOR};\${FG_COLOR}m\`"
	echo "  Reset  --> \`\e[m\`"
	echo
	echo -e "  \e[1mFormat:\e[m"
	echo -e "            Default -   (\e[mEXAMPLE\e[m)"
	echo -e "        Bold/Bright - 1 (\e[1mEXAMPLE\e[m)"
	echo -e "                Dim - 2 (\e[2mEXAMPLE\e[m)"
	echo -e "         Underlined - 4 (\e[4mEXAMPLE\e[m)"
	echo -e "              Blink - 5 (\e[5mEXAMPLE\e[m)"
	echo -e "    Reverse FG & BG - 7 (\e[7mEXAMPLE\e[m)"
	echo -e "             Hidden - 8 (\e[8mEXAMPLE\e[m)"
	echo
	echo "  Colors:"
	echo -e "       \e[1;4mForeground\e[m                  \e[1;4mBackground\e[m"
	echo -e "          Default - 39 (\e[39mEXAMPLE\e[m) -  49 (\e[49mEXAMPLE\e[m)"
	echo -e "            Black - 30 (\e[30mEXAMPLE\e[m) -  40 (\e[40mEXAMPLE\e[m)"
	echo -e "              Red - 31 (\e[31mEXAMPLE\e[m) -  41 (\e[41mEXAMPLE\e[m)"
	echo -e "            Green - 32 (\e[32mEXAMPLE\e[m) -  42 (\e[42mEXAMPLE\e[m)"
	echo -e "           Yellow - 33 (\e[33mEXAMPLE\e[m) -  43 (\e[43mEXAMPLE\e[m)"
	echo -e "             Blue - 34 (\e[34mEXAMPLE\e[m) -  44 (\e[44mEXAMPLE\e[m)"
	echo -e "          Magenta - 35 (\e[35mEXAMPLE\e[m) -  45 (\e[45mEXAMPLE\e[m)"
	echo -e "             Cyan - 36 (\e[36mEXAMPLE\e[m) -  46 (\e[46mEXAMPLE\e[m)"
	echo -e "       Light Gray - 37 (\e[37mEXAMPLE\e[m) -  47 (\e[47mEXAMPLE\e[m)"
	echo -e "        Dark Gray - 90 (\e[90mEXAMPLE\e[m) - 100 (\e[100mEXAMPLE\e[m)"
	echo -e "        Light Red - 91 (\e[91mEXAMPLE\e[m) - 101 (\e[101mEXAMPLE\e[m)"
	echo -e "      Light Green - 92 (\e[92mEXAMPLE\e[m) - 102 (\e[102mEXAMPLE\e[m)"
	echo -e "     Light Yellow - 93 (\e[93mEXAMPLE\e[m) - 103 (\e[103mEXAMPLE\e[m)"
	echo -e "       Light Blue - 94 (\e[94mEXAMPLE\e[m) - 104 (\e[104mEXAMPLE\e[m)"
	echo -e "    Light Magenta - 95 (\e[95mEXAMPLE\e[m) - 105 (\e[105mEXAMPLE\e[m)"
	echo -e "       Light Cyan - 96 (\e[96mEXAMPLE\e[m) - 106 (\e[106mEXAMPLE\e[m)"
	echo -e "            White - 97 (\e[97mEXAMPLE\e[m) - 107 (\e[107mEXAMPLE\e[m)"
	
	T='gYw'   # The test text
	echo -e "\n                 40m     41m     42m     43m     44m     45m     46m     47m";
	for FGs in '    m' '   1m' '  30m' '1;30m' '  31m' '1;31m' '  32m' '1;32m' '  33m' '1;33m' '  34m' '1;34m' '  35m' '1;35m' '  36m' '1;36m' '  37m' '1;37m';
	  do FG=${FGs// /}
	  echo -en " $FGs \033[$FG  $T  "
	  for BG in 40m 41m 42m 43m 44m 45m 46m 47m;
	    do echo -en "$EINS \033[$FG\033[$BG  $T \033[0m\033[$BG \033[0m";
	  done
	  echo;
	done
	echo
}

function printALL () {
	# generates an 8 bit color table (256 colors) for
	# reference purposes, using the \033[48;5;${val}m
	# ANSI CSI+SGR (see "ANSI Code" on Wikipedia)
	#

	echo -e "\n256 Color Usage:"
	echo "  Foreground --> \`\e[38;5;\${FG_COLOR}m\`"
	echo "  Background --> \`\e[48;5;\${BG_COLOR}m\`"
	echo "  Combined   --> \`\e[38;5;\${FG_COLOR};48;5;\${BG_COLOR}m\`"
	echo "  Reset      --> \`\e[m\`"

	echo -en "\n   +  "
	for i in {0..35}; do
	  printf "%2b " $i
	done
	
	printf "\n\n %3b  " 0
	for i in {0..15}; do
	  echo -en "\e[48;5;${i}m  \e[m "
	done
	
	#for i in 16 52 88 124 160 196 232; do
	for i in {0..6}; do
	  let "i = i*36 +16"
	  printf "\n\n %3b  " $i
	  for j in {0..35}; do
	    let "val = i+j"
	    echo -en "\e[48;5;${val}m  \e[m "
	  done
	done
	
	echo -e "\n"
}

if [ "$SHOW_ALL" = true ]; then
	printALL
else
	printANSI
fi
